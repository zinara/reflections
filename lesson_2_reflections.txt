What happens when you initialize a repository? Why do you need to do it? After you run git init it creates a new repository in the directory that you are currently on. and you can confirm this by running ls -a in the command line which will show you an output of .git among the files listed as in the directory. 

How is the staging area different from the working directory and the repository? What value do you think it offers? The staging area is different from both the repository  and the working directory from the fact that the staging area is a place for files are kept in consideration if they want to be commited or not and if they are not one can always change their mind 

How can you use the staging area to make sure you have one commit per logical change? when you are ready to commit and you type git add as the files are added to the staging area and not directly into the repository, one will always have the choice of checking to know if they really wanted the changes and if it turns out that they don't they can always type git reset to reset the files back to the working directory.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do? The result of merging two branches would be the addition of that branch that is being merged to the current branch that you are working on.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually? automatic is faster, manual is not, automatic is prone to mistake people maake but manual have the choices of its administrators with it. 
                                                                                        
                                                                                      
                                                                                               -